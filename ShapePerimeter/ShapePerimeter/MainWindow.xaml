<Window x:Class="ShapePerimeter.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:enum="clr-namespace:ShapePerimeter.Data.Helper"
        xmlns:model="clr-namespace:ShapePerimeter.Data.Model"
        xmlns:helper="clr-namespace:ShapePerimeter.Data.Helper"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <Window.Resources>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="Red"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>

        <Style x:Key="ToggleButtonBaseStyle" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource {x:Type ToggleButton}}">
            <Setter Property="Width" Value="50"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="Margin" Value="10"/>
        </Style>

        <Style x:Key="TriangleButtonBaseStyle" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource ToggleButtonBaseStyle}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Path x:Name="Path" Fill="{StaticResource Button.Static.Background}" Data="M 0 49 L 25 0 L 47 48 Z"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="Path" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="Stroke" TargetName="Path" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="Path" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="Stroke" TargetName="Path" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="Path" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="Stroke" TargetName="Path" Value="{StaticResource Button.Disabled.Border}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Fill" TargetName="Path" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="Stroke" TargetName="Path" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="EllipseButtonBaseStyle" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource ToggleButtonBaseStyle}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Ellipse x:Name="Ellipse" Fill="{StaticResource Button.Static.Background}" Width="40" Height="40" />
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="Ellipse" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="Stroke" TargetName="Ellipse" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="Ellipse" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="Stroke" TargetName="Ellipse" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="Ellipse" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="Stroke" TargetName="Ellipse" Value="{StaticResource Button.Disabled.Border}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Fill" TargetName="Ellipse" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="Stroke" TargetName="Ellipse" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="RectangelButtonBaseStyle" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource ToggleButtonBaseStyle}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Rectangle x:Name="Rectangel" Fill="{StaticResource Button.Static.Background}" Width="40" Height="40" />
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="Rectangel" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="Stroke" TargetName="Rectangel" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="Rectangel" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="Stroke" TargetName="Rectangel" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="Rectangel" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="Stroke" TargetName="Rectangel" Value="{StaticResource Button.Disabled.Border}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Fill" TargetName="Rectangel" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="Stroke" TargetName="Rectangel" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid x:Name="LayoutRoot">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Border Grid.Row="1" Grid.Column="0" BorderBrush="Black" BorderThickness="1">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition x:Name="Title" Height="Auto"/>
                    <RowDefinition x:Name="Content" Height="*"/>
                    <RowDefinition x:Name="Footer" Height="Auto"/>
                </Grid.RowDefinitions>
                <ContentControl Content="{Binding Shape}">
                    <ContentControl.Resources>
                        <DataTemplate DataType="{x:Type model:CircleModel}">
                            <StackPanel  Orientation="Horizontal" >
                                <TextBlock Text="Circle Radius"/>
                                <TextBox Text="{Binding Radius, UpdateSourceTrigger=PropertyChanged}" Width="100" HorizontalContentAlignment="Right"/>

                            </StackPanel>
                        </DataTemplate>

                        <DataTemplate DataType="{x:Type model:RectangleModel}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Row="0" Grid.Column="0" Text="Width"/>
                                <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding Width, UpdateSourceTrigger=PropertyChanged}" Width="100" HorizontalContentAlignment="Right"/>
                                <TextBlock Grid.Row="1" Grid.Column="0" Text="Height"/>
                                <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Height, UpdateSourceTrigger=PropertyChanged}" Width="100" HorizontalContentAlignment="Right"/>
                            </Grid>
                        </DataTemplate>

                        <DataTemplate DataType="{x:Type model:TriangleModel}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Row="0" Grid.Column="0" Text="X1"/>
                                <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding X1, UpdateSourceTrigger=PropertyChanged}" Width="100" HorizontalContentAlignment="Right"/>
                                <TextBlock Grid.Row="1" Grid.Column="0" Text="Y1"/>
                                <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Y1, UpdateSourceTrigger=PropertyChanged}" Width="100" HorizontalContentAlignment="Right"/>

                                <TextBlock Grid.Row="2" Grid.Column="0" Text="X2"/>
                                <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding X2, UpdateSourceTrigger=PropertyChanged}" Width="100" HorizontalContentAlignment="Right"/>
                                <TextBlock Grid.Row="3" Grid.Column="0" Text="Y2"/>
                                <TextBox Grid.Row="3" Grid.Column="1" Text="{Binding Y2, UpdateSourceTrigger=PropertyChanged}" Width="100" HorizontalContentAlignment="Right"/>

                                <TextBlock Grid.Row="4" Grid.Column="0" Text="X3"/>
                                <TextBox Grid.Row="4" Grid.Column="1" Text="{Binding X3, UpdateSourceTrigger=PropertyChanged}" Width="100" HorizontalContentAlignment="Right"/>
                                <TextBlock Grid.Row="5" Grid.Column="0" Text="Y3"/>
                                <TextBox Grid.Row="6" Grid.Column="1" Text="{Binding Y3, UpdateSourceTrigger=PropertyChanged}" Width="100" HorizontalContentAlignment="Right"/>
                            </Grid>
                        </DataTemplate>
                    </ContentControl.Resources>
                </ContentControl>
            </Grid>
        </Border>
        <Border Grid.Row="1" Grid.Column="1" BorderBrush="Black" BorderThickness="1">
            <Canvas helper:MouseBehavior.MouseUpCommand="{Binding CreateShapeCommand}" Background="LightGray">
                <Canvas.Resources>
                    <DataTemplate DataType="{x:Type model:TriangleModel}">
                        <Polygon  Points="{Binding Points}"  StrokeThickness="1" Stroke="red"/>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type model:CircleModel}">
                        <Ellipse Height="{Binding Radius}" Width="{Binding Radius}" StrokeThickness="1" Stroke="Yellow"/>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type model:RectangleModel}">
                        <Rectangle Height="{Binding Height}" Width="{Binding Width}" StrokeThickness="1" Stroke="Black"/>
                    </DataTemplate>
                </Canvas.Resources>
                <ItemsControl ItemsSource="{Binding Shapes}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemContainerStyle>
                        <Style TargetType="ContentPresenter">
                            <Setter Property="Canvas.Left" Value="{Binding X}"/>
                            <Setter Property="Canvas.Top" Value="{Binding Y}"/>
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                    
                </ItemsControl>
            </Canvas>
        </Border>
        <Grid Grid.Row="2" Grid.ColumnSpan="2">
            <StackPanel Orientation="Horizontal" Background="Azure" >

                <ToggleButton IsChecked="{Binding IsTriangleChecked}" Style="{StaticResource TriangleButtonBaseStyle}"/>

                <ToggleButton IsChecked="{Binding IsCilcleChecked}" Style="{StaticResource EllipseButtonBaseStyle}"  />

                <ToggleButton IsChecked="{Binding IsRectangleChecked}" Style="{StaticResource RectangelButtonBaseStyle}"/>

            </StackPanel>

            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                <TextBlock x:Name="textblock" VerticalAlignment="Center"  Width="200" Text="{Binding Perimeters, StringFormat=Perimeter: {0:f1}}" />
            </StackPanel>
        </Grid>

    </Grid>
</Window>
