<Window x:Class="ShapePerimeter.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:enum="clr-namespace:ShapePerimeter.Data.Helper"
        xmlns:model="clr-namespace:ShapePerimeter.Data.Model"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2"  SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="Red"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>

        <Style x:Key="ButtonBaseStyle" TargetType="{x:Type Button}">
            <Setter Property="Width" Value="50"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Command" Value="{Binding CreateSharpeCommand}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="Transparent" BorderThickness="0" Background="Transparent" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" 
                                              Focusable="False" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" 
                                              RecognizesAccessKey="True"                                               
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>

                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TriangleButtonBaseStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBaseStyle}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Path x:Name="Path" Fill="{StaticResource Button.Static.Background}" Data="M 0 49 L 25 0 L 47 48 Z"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="Stroke" TargetName="Path" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="Path" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="Stroke" TargetName="Path" Value="{StaticResource Button.MouseOver.Border}"/>

                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="Path" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="Stroke" TargetName="Path" Value="{StaticResource Button.Pressed.Border}"/>

                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="Path" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="Stroke" TargetName="Path" Value="{StaticResource Button.Disabled.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="EllipseButtonBaseStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBaseStyle}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Ellipse x:Name="Ellipse" Fill="{StaticResource Button.Static.Background}" Width="40" Height="40" />
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="Stroke" TargetName="Ellipse" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="Ellipse" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="Stroke" TargetName="Ellipse" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="Ellipse" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="Stroke" TargetName="Ellipse" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="Ellipse" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="Stroke" TargetName="Ellipse" Value="{StaticResource Button.Disabled.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="RectangelButtonBaseStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBaseStyle}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Rectangle x:Name="Rectangel" Fill="{StaticResource Button.Static.Background}" Width="40" Height="40" />
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="Stroke" TargetName="Rectangel" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="Rectangel" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="Stroke" TargetName="Rectangel" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="Rectangel" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="Stroke" TargetName="Rectangel" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="Rectangel" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="Stroke" TargetName="Rectangel" Value="{StaticResource Button.Disabled.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid x:Name="LayoutRoot">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0"  Orientation="Horizontal" >

            <Button x:Name="Triangle" Style="{StaticResource TriangleButtonBaseStyle}" CommandParameter="{x:Static enum:ShapeTypeEnum.Triangle}" />

            <Button x:Name="Ellipse"  Style="{StaticResource EllipseButtonBaseStyle}" CommandParameter="{x:Static enum:ShapeTypeEnum.Circle}" />

            <Button x:Name="Rectangel" Style="{StaticResource RectangelButtonBaseStyle}" CommandParameter="{x:Static enum:ShapeTypeEnum.Rectangle}"/>

        </StackPanel>

        
        <ItemsControl Grid.Row="1" ItemsSource="{Binding Shapes}">
            <ItemsControl.Resources>
                <DataTemplate DataType="{x:Type model:RectangleModel}">
                    <Rectangle Margin="5" Height="{Binding Height}" Width="{Binding Width}" Stroke="Black" StrokeThickness="1" Fill="Red"/>
                </DataTemplate>
                <DataTemplate DataType="{x:Type model:CircleModel}">
                    <Ellipse Margin="5" Height="{Binding Radius}" Width="{Binding Radius}" Stroke="Black" StrokeThickness="1" Fill="Red"/>
                </DataTemplate>
                <DataTemplate DataType="{x:Type model:TriangleModel}">
                    <Polygon Margin="5"  Points="{Binding Points}" Fill="Red" Stroke="Black"  StrokeThickness="1" />
                </DataTemplate>
            </ItemsControl.Resources>
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>            
        </ItemsControl>       
        
        <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right">
            <TextBlock x:Name="textblock"  Width="100" Text="{Binding Perimeters, StringFormat=data:{0:f1}}" />
            <Button Content="Permiter" Width="100" Height="50" Command="{Binding GetPermiterCommand}" />
        </StackPanel>

        
    </Grid>
</Window>
